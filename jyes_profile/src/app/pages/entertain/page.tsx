'use client'

import { motion } from 'framer-motion'
import { useEffect, useState } from 'react'

const entertainments = [
  {
    emoji: 'üéÆ',
    title: 'Ch∆°i game',
    desc: 'Ch∆°i th√¨ g√† m√† gi·ªèi d·ªói game:\n \n- Cod mobile/warzone (Ch∆°i √≠t) \n- League of Legends / TFT\n- Li√™n qu√¢n mobile\n- PUBG Mobile',
    color: 'bg-indigo-600',
  },
  {
    emoji: 'üé¨',
    title: 'Xem phim',
    desc: 'Phim hay, nh∆∞ng m√† qu√™n t√™n nh√¢n v·∫≠t ch√≠nh ·∫°:\n \n - Khoa h·ªçc vi·ªÖn t∆∞·ªüng\n- Chi·∫øn tranh - l·ªãch s·ª≠\n- Si√™u anh h√πng',
    color: 'bg-purple-500',
  },
  {
    emoji: 'üéµ',
    title: 'Nghe nh·∫°c',
    desc: 'Nghe th√¨ hay, c√≤n m√¨nh h√°t th√¨ d·ªü:\n \n- US-UK\n- V-Pop\n- Nh·∫°c x∆∞a',
    color: 'bg-pink-500',
  },
  {
    emoji: 'üó£Ô∏è',
    title: 'Tr√≤ truy·ªán & t√¢m s·ª±',
    desc: 'C√°i g√¨ c≈©ng n√≥i ƒë∆∞·ª£c:\n\n- T√¨nh c·∫£m \n- Ki·∫øn th·ª©c\n- ƒê·ªùi s·ªëng\n- ·∫®m th·ª±c',
    color: 'bg-rose-500',
  },
  {
    emoji: 'üî†',
    title: 'Ng√¥n ng·ªØ',
    desc: 'Ti·∫øng g√¨ c≈©ng bi·∫øt, ti·∫øng ƒë∆∞·ª£c ti·∫øng kh√¥ng:\n\n- Ti·∫øng Anh, Vi·ªát l∆∞u lo√°t (t√πy l√∫c)\n- Ti·∫øng Nga, Ph√°p (v√†i c√¢u)\n- C√°c ti·∫øng kh√°c (v√†i ch·ªØ): \nTrung, ƒê·ª©c, √ù, T√¢y Ban Nha, Ukraina, Belarus, H√†n, Nh·∫≠t, Th√°i',
    color: 'bg-teal-600',
  },
  {
    emoji: 'üõë',
    title: 'VƒÉn h√≥a & ch√≠nh tr·ªã',
    desc: 'T√¨m hi·ªÉu th√™m v·ªÅ c√°c n·ªÅn vƒÉn minh ƒë·ªÉ tƒÉng l·ª±c chi·∫øn:\n\n- Th·∫ø gi·ªõi\n- Vi·ªát Nam\n- H·ªá th·ªëng ch√≠nh tr·ªã c√°c qu·ªëc gia, ƒë·∫∑c bi·ªát CNXH',
    color: 'bg-red-600',
  },
  {
    emoji: 'üïµÔ∏è',
    title: 'Kƒ© nƒÉng s√°ng t·∫°o',
    desc: 'Kh√°m th√¨ √≠t m√† ph√° th√¨ nhi·ªÅu:\n\n- Design, edit ·∫£nh v√† video\n- Truy·ªÅn th√¥ng & s·ª± ki·ªán\n- D·∫°y h·ªçc v√† ch·ªâ b√†i th√™m\n- Ng√¥n ng·ªØ v√† vƒÉn h√≥a',
    color: 'bg-yellow-600 text-black',
  },
]

function shuffleArray(array: any[]) {
  return [...array].sort(() => Math.random() - 0.5)
}

export default function EntertainPage() {
  const [shuffled, setShuffled] = useState(entertainments)

  useEffect(() => {
    const interval = setInterval(() => {
      setShuffled(shuffleArray)
    }, 10000) // 30 gi√¢y

    return () => clearInterval(interval)
  }, [])

  return (
    <main className="flex flex-col items-center justify-start min-h-screen bg-gradient-to-br from-red-500 via-red-400 to-pink-400 text-white p-6">
      <motion.h1
        className="text-4xl md:text-5xl font-extrabold tracking-tight mb-10 text-center"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
        ‚ú® Gi·∫£i tr√≠ & S·ªü th√≠ch c√° nh√¢n
      </motion.h1>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 w-full max-w-6xl">
        {shuffled.map((item, i) => (
          <motion.div
            key={i}
            className={`rounded-xl p-6 shadow-lg text-left whitespace-pre-line transition duration-300 hover:scale-[1.02] ${item.color}`}
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: i * 0.1 }}
          >
            <div className="text-3xl mb-2">{item.emoji}</div>
            <h2 className="text-2xl font-bold mb-2">{item.title}</h2>
            <p className="text-sm leading-relaxed">{item.desc}</p>
          </motion.div>
        ))}
      </div>
    </main>
  )
}
